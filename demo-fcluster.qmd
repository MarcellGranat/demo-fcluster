---
title: Results for demo-fcluster
format:
  html:
    embed-resources: true
    code-fold: true
    code-summary: "Show the code"
toc: true
theme:
  light: flatly
  dark: darkly
date: last-modified
editor_options: 
  chunk_output_type: console
execute: 
  echo: true
  fig-dpi: 400
  error: true
  cache: true
  warning: false
---

```{r setup, include=FALSE}
source("utils.R")
```

```{r}
demog_df <- board |> 
  pin_read("demog_df")

eco_df <- board |> 
  pin_read("eco_df")

euro_map <- board |> 
  pin_read("euro_map")

load("clustering_results.RData")
```

```{r}
demog_df |> 
  filter(time == 2020) |> 
  plot_map(lifexp) + 
  geom_sf_text(aes(label = geo), size = .7)

demog_df |> 
  filter(time == 2020) |> 
  filter(tfr < 3) |> 
  plot_map(tfr) + 
  geom_sf_text(aes(label = geo), size = .7)
```


```{r}
#| label: fig-silhuette

fit_df %>% 
  transmute(time, k,  silhuette = map_dbl(fit, "criterion")) %>% 
  ggplot() + 
  aes(k , time, fill = silhuette) + 
  geom_tile(color = "black")  +
  scale_x_continuous(breaks = 2:10, labels = scales::number) + 
  labs(
    x = "Number of clusters",
    y = "Time",
    fill = "Silhuette"
  ) + 
  theme(
    panel.grid.minor = element_blank(),
    legend.position = "right"
  )
```

```{r}
#| label: fig-u-maps

u_df |> 
  select(time, geo, u1, u2, u3) |> 
  group_by(time, geo) |> 
  pivot_longer(cols = - group_cols()) |> 
  filter(time == 2020) |> 
  group_by(name) |> 
  group_map(~ .) |> 
  map(plot_map, value) |> 
  map(~ {. + scale_fill_gradientn(
    colors = c("white", "blue4"),
    limits = c(0, 1),
    guide = guide_colorsteps(
      frame.colour = "black",
      ticks = TRUE,
      ticks.colour = "black"
    )
  ) + 
      theme(title = element_text(size = 8))
  }) |> 
  map2(1:3, ~ {.x + ggtitle(str_c("Membership to cluster #", .y))}) |> 
  patchwork::wrap_plots(guides = "collect", ncol = 3)
```


```{r}
#| label: fig-clusters-maps

u_df |> 
  select(time, geo, u1, u2, u3) |> 
  group_by(time, geo) |> 
  pivot_longer(cols = - group_cols()) |> 
  slice_max(value, n = 1) |> 
  mutate(clust = str_remove(name, "\\D")) |> 
  filter(time == 2000 | time == 2020) |> 
  group_by(time) |> 
  group_map(~ plot_map(.x, clust)) |> 
  map2(c(2000, 2020), ~ {.x + ggtitle(.y)}) |> 
  patchwork::wrap_plots(guides = "collect")
```

```{r}
u_df |> 
  select(time, geo, u1, u2, u3) |> 
  group_by(time, geo) |> 
  pivot_longer(cols = - group_cols()) |> 
  slice_max(value, n = 1) |> 
  mutate(clust = str_remove(name, "\\D")) |> 
  filter(time == 2020) |> 
  plot_map(clust) + 
  geom_sf_text(aes(label = geo), size = 1)
```


```{r}
#| label: fig-h

h_rescaled_df |> 
  group_by(time, clus) |> 
  pivot_longer(- group_cols()) |> 
  mutate(name = NiceName(name)) |> 
  ggplot() +
  aes(time, value, color = as.factor(clus)) + 
  geom_line() +
  geom_point() + 
  facet_wrap(~ name, ncol = 1, scales = "free_y") + 
  labs(
    x = "Time", 
    y = NULL,
    color = "Cluster"
  )
```

```{r}
#| label: fig-eco

u_df |> 
  select(time, geo, u1, u2, u3) |> 
  group_by(time, geo) |> 
  pivot_longer(- group_cols(),
               names_to = "clust",
               values_to = "u",
               names_transform = ~ str_remove_all(., "\\D")
  ) |> 
  left_join(eco_df, by = c("time", "geo")) |> 
  group_by(time, clust) |> 
  summarise(
    p80p20 = weighted.mean(p80p20, w = u, na.rm = TRUE),
    income = weighted.mean(income, w = u, na.rm = TRUE),
    edu = weighted.mean(edu, w = u, na.rm = TRUE),
    rd_ppl = weighted.mean(rd_ppl, w = u, na.rm = TRUE)
  ) |> 
  pivot_longer(- (time:clust)) |> 
  mutate(name = NiceName(name)) |> 
  ggplot() + 
  aes(time, value, color = clust) + 
  geom_line() +
  geom_point() + 
  facet_wrap(~ name, ncol = 2, scales = "free_y") + 
  labs(
    x = "Time", 
    y = NULL,
    color = "Cluster"
  )
```
